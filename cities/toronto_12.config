[DEFAULT]

# ----------------------------------------------------------------------------
# plot title (str, default None)
# The title is recorded in the output json file
# and is used as the plot title.
# ----------------------------------------------------------------------------

title = Toronto, 12-block model

# ----------------------------------------------------------------------------
# city size (even int, default 8)
# The grid is a square, with this number of blocks on each side.
# A block is often a minute, or a kilometer.
# ----------------------------------------------------------------------------

city_size = 12

# ----------------------------------------------------------------------------
# vehicle count (int, default 0).
# The number of vehicles in the simulation. For simulations with 
# equilibration or sequences, this is the number of vehicles at 
#  the beginning of the simulation.
# ----------------------------------------------------------------------------

vehicle_count = 10

# ----------------------------------------------------------------------------
# base demand (float, default 0.0)
# For simulations without equilibration, the demand for trips.
# Alternatively, the request rate (requests per block of time).
# For simulations with equilibration, the request rate is given by 
# 
#       demand = base_demand * price ** (-elasticity)
# ----------------------------------------------------------------------------

base_demand = 4.8

# ----------------------------------------------------------------------------
# trip inhomogeneity (float in the range [0.0, 1.0], default 0.0).
# Trips originate in one of two zones: central zone or outer zone.
# The inner zone has sides C/2, and is centred on (C/2, C/2); 
# the outer zone is the remaining 3/4 of the area.
# At 0: the distribution of trip origins is homogenous.
# At 1: all trip origins are inside the central zone.
# ----------------------------------------------------------------------------

trip_inhomogeneity = 0.0

# ----------------------------------------------------------------------------
# minimum trip distance (int, default 0).
# A trip must be at least this long.
# ----------------------------------------------------------------------------

min_trip_distance = 0

# ----------------------------------------------------------------------------
# maximum trip distance (int, default city_size).
# A trip must be at most this long.
# ----------------------------------------------------------------------------

max_trip_distance = 8

# ----------------------------------------------------------------------------
# time blocks (int, default 201)
# The number of time periods (blocks) to run the simulation.
# Each period corresponds to a vehicle travelling one block.
# ----------------------------------------------------------------------------

time_blocks = 480

# ----------------------------------------------------------------------------
# idle vehicles moving (bool, default True)
# If True, vehicles in the 'available' state move around
# If False, they stay where they are.
# ----------------------------------------------------------------------------

idle_vehicles_moving = True

# ----------------------------------------------------------------------------
# results window (int, default 50)
# At the end of the run, compute the final results by averaging over
# results_window blocks. Typically bigger than smoothing_window.
# ----------------------------------------------------------------------------

results_window = 240

# ----------------------------------------------------------------------------
# log file (str, default None)
# The file name for logging messages.
# By default, log messages are written to standard output only.
# ----------------------------------------------------------------------------

log_file = 

# ----------------------------------------------------------------------------
# verbosity (int, default 0)
# If 0, log warning, and error messages
# If 1, log info, warning, and error messages
# If 2, log debug, information, warning, and error messages.
# ----------------------------------------------------------------------------

verbosity = 0

# ----------------------------------------------------------------------------
# animate the simulation
# If set, configure the animation in the [ANIMATION] section.
# ----------------------------------------------------------------------------

animate = False

# ----------------------------------------------------------------------------
# equilibrate the supply of vehicles and demand for trips
# If set, configure the equilibration in the [EQUILIBRATION] section.
# ----------------------------------------------------------------------------

equilibrate = False

# ----------------------------------------------------------------------------
# run a sequence of simulations with different vehicle counts or request rates
# If set, configure the sequence in the [SEQUENCE] section.
# ----------------------------------------------------------------------------

run_sequence = False

# ----------------------------------------------------------------------------
# fix the configuration file. If set, write a copy of the configuration file 
# with updated descriptions to the console.
# Pipe it to another file if you want to use it.
# ----------------------------------------------------------------------------

fix_config_file = True

# ----------------------------------------------------------------------------
# DEPRECATION NOTICE: The trip_distribution option is deprecated
# This option is now ignored.
# To configure trip distribution, use the trip_inhomogeneity option.
# ----------------------------------------------------------------------------

trip_distribution = 

[ANIMATION]

# ----------------------------------------------------------------------------
# animation style (str, default None)
# Select which charts and / or maps to display.
# Possible values include...
# - none (no charts)
# - map
# - stats
# - all (displays map + stats)
# - bar
# - sequence.
# ----------------------------------------------------------------------------

animation_style = none

# ----------------------------------------------------------------------------
# animate update period (int, default 1)
# Update charts every N blocks.
# ----------------------------------------------------------------------------

animate_update_period = 1

# ----------------------------------------------------------------------------
# annotation (str, default None)
# An annotation added to map and stats plots
# ----------------------------------------------------------------------------

annotation = 

# ----------------------------------------------------------------------------
# interpolate (int, default 1)
# For the map display (only) add this many interpolated points between
# time periods so the car movements are smoother.
# ----------------------------------------------------------------------------

interpolate = 1

# ----------------------------------------------------------------------------
# animation output file (str, default None)
# Supply a file name in which to save the animations
# If none is supplied, display animations on the screen only.
# ----------------------------------------------------------------------------

animation_output_file = 

# ----------------------------------------------------------------------------
# ImageMagick directory (str, default None)
# If you choose an MP4 or GIF output (output parameter) then you need 
# ImageMagick. This is the directory in which it is installed,
# for example:
# 
#   imagemagick_dir = /Program Files/ImageMagick-7.0.9-Q16 
# ----------------------------------------------------------------------------

imagemagick_dir = 

# ----------------------------------------------------------------------------
# smoothing window (int, default None)
# Rolling window in which to compute trailing averages 
# (wait times, busy fraction etc) used in graphs and in calculations.
# ----------------------------------------------------------------------------

smoothing_window = 

[EQUILIBRATION]

# ----------------------------------------------------------------------------
# equilibration method (str converted to enum, default Equilibration.NONE)
# Valid values are 'None' or 'Price (case insensitive)'.
# ----------------------------------------------------------------------------

equilibration = none

# ----------------------------------------------------------------------------
# reserved wage (float, default 0.5)
# Vehicle utility per block is U = P.B(1 - F) - C_d, 
# where C_d = reserved wage.
# ----------------------------------------------------------------------------

reserved_wage = 0.4

# ----------------------------------------------------------------------------
# price (float, default 1.0)
# Price is a part of the equilibration process.
# ----------------------------------------------------------------------------

price = 1.0

# ----------------------------------------------------------------------------
# platform commission F (float, default 0.0)
# The vehicle utility per block is U = P.B.(1 - F) - C_d, 
# where F = platform commission.
# F > 0 amounts to the platform taking a commission, 
# F < 0 is the platform subsidizing vehicles.
# ----------------------------------------------------------------------------

platform_commission = 0.0

# ----------------------------------------------------------------------------
# demand elasticity (float, default 0.0)
# The demand (request rate) = k * p ^ (-r), 
# where r is the demand elasticity and k is the base demand
# If left at the default, the demand does not depend on price.
# ----------------------------------------------------------------------------

demand_elasticity = 0.5

# ----------------------------------------------------------------------------
# equilibration interval (int, default 1)
# The number of blocks at which equilibration steps are chosen.
# ----------------------------------------------------------------------------

equilibration_interval = 5

[SEQUENCE]

# ----------------------------------------------------------------------------
# request rate increment (float, default None)
# The increment in a sequence of request rates
# The starting value is 'base_demand' in the DEFAULT section.
# ----------------------------------------------------------------------------

request_rate_increment = 

# ----------------------------------------------------------------------------
# request rate max (float, default None)
# The maximum value in a sequence of request rates
# The starting value is 'base_demand' in the DEFAULT section.
# ----------------------------------------------------------------------------

request_rate_max = 

# ----------------------------------------------------------------------------
# vehicle count increment (int, default None)
# The increment in a sequence of vehicle counts.
# ----------------------------------------------------------------------------

vehicle_count_increment = 

# ----------------------------------------------------------------------------
# vehicle Count Max (int, default None)
# The maximum value in a sequence of vehicle counts.
# ----------------------------------------------------------------------------

vehicle_count_max = 

[IMPULSES]

# ----------------------------------------------------------------------------
# impulse list (dict, default None)
# Sudden changes during the simulation
# Write as a list of dictionaries. For example...
# impulse_list = [{'block': 480, 'base_demand': 20.0},
#    {'block': 960, 'base_demand': 18.0},
#    {'block': 1080, 'base_demand': 7},
#    ]
# ----------------------------------------------------------------------------

impulse_list = 

