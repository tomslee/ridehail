 ========================================================================
# Example configuration file for ridehail simulation
# Tom Slee, 2020-06-20
# ========================================================================

[DEFAULT]

# ------------------------------------------------------------------------
# City size (integer, default 10)
# The length of the city grid, in blocks.
# - Manhattan has about 2500 blocks, which is 50 * 50
# - NYC overall has 120,000 blocks (according to the man who walked them 
#   all), which is more like 350 * 350.
# ------------------------------------------------------------------------

city_size = 50

# ------------------------------------------------------------------------
# Driver count (integer, default 1)
# The number of vehicles in the simulation. For simulations with 
# equilibration (see below), this is the number of vehicles at the 
# beginning of the simulation
# ------------------------------------------------------------------------

vehicle_count = 7000

# ------------------------------------------------------------------------
# Base demand (float)
# An exogenous demand: actual demand = base demand - price
# ------------------------------------------------------------------------

base_demand = 21

# ------------------------------------------------------------------------
# Minimum trip distance (integer, default 0)
# A trip must be at least this long
# ------------------------------------------------------------------------

min_trip_distance = 0

# ------------------------------------------------------------------------
# Available vehicles moving (boolean, default False)
# Set to True if vehicles in the "idle" state should vehicle around
# the city. Set to False is they should stay where they are.
# ------------------------------------------------------------------------

idle_vehicles_moving = True 

# ------------------------------------------------------------------------
# Trip inhomogeneity (float in [0,1], default = 0.0)
# The more trip inhomogeneity, the more trips start in the city center
# ------------------------------------------------------------------------

trip_inhomogeneity = 0.0

# ------------------------------------------------------------------------
# Log file (string, default None)
# Log file name. By default, log messages are written to standard output
# only.
# ------------------------------------------------------------------------

log_file = 

# ------------------------------------------------------------------------
# Time blocks (integer)
# The number of time blocks to run the simulation. Each block corresponds
# to a vehicle travelling one block
# 1440 minutes is a day.
# ------------------------------------------------------------------------

time_blocks = 1440
# time_blocks = 2500

# ------------------------------------------------------------------------
# Verbosity (integer, default 0)
# If 1, log info messages in addition to warning, and 
# error messages
# If 2, log debug messages in addition to information, warning, and 
# error messages
# ------------------------------------------------------------------------

verbosity = 0

# ------------------------------------------------------------------------
# Results Window (integer, default = 100)
# At the end of the run, compute the final results by averaging over
# this results_window number of blocks. Typically bigger than 
# trailing_window
# ------------------------------------------------------------------------

results_window = 200

# ------------------------------------------------------------------------
# Animation (binary, default False)
# If true, display or save animation.
# Animation configuration is in the [ANIMATION] section
# ------------------------------------------------------------------------

animation = True

# ------------------------------------------------------------------------
# Equilibration (choice from supply, price, none. Default None)
# Equilibrate the number of vehicles (supply), the request rate (demand)
# or full. The details of the parameter choices and equilibration rates
# are given in other parameters
# ------------------------------------------------------------------------

equilibration = True  

# ------------------------------------------------------------------------
# Run sequence (boolean, default False)
# Set to True to run a sequence of simulations with different vehicle 
# counts and request rates
# ------------------------------------------------------------------------

sequence = False

[ANIMATION]

# ------------------------------------------------------------------------
# Animate
# Select which charts and / or maps to display. 
# Possible values include 
#   - none (no charts)
#   - map 
#   - stats
#   - all
# ------------------------------------------------------------------------

animate = stats

# ------------------------------------------------------------------------
# Animate update period (integer, default 1)
# Update charts every N periods
# ------------------------------------------------------------------------

animate_update_period = 1

# ------------------------------------------------------------------------
# ImageMagick_Dir (string)
# If you choose an MP4 or GIF output (output parameter) then you need 
# ImageMagick installed. This is the directory in which it is installed, 
# for example:
#
#   imagemagick_dir = /Program Files/ImageMagick-7.0.9-Q16" 
# ------------------------------------------------------------------------

imagemagick_dir = /Program Files/ImageMagick-7.0.9-Q16

# ------------------------------------------------------------------------
# Smoothing Window (integer, default = 20)
# Rolling window in which to compute trailing averages (wait times, busy
# fraction etc) that are used in graphs and in calculations.
# ------------------------------------------------------------------------

smoothing_window = 20

# ------------------------------------------------------------------------
# Animation output (string, default None)
# Supply a file name in which to save the animations. If none is supplied,
# any animations are displayed on the screen only.
# ------------------------------------------------------------------------

animation_output = none 

[EQUILIBRATION]
# ------------------------------------------------------------------------
# Equilibration method. Should usually be "None" or "Price"
# ------------------------------------------------------------------------

equilibrate = price

# ------------------------------------------------------------------------
# Price (float, default 1)
# Has effect only if an equilibration method is chosen
# Price is a part of the equilibration path
# ------------------------------------------------------------------------

price = 1

# ------------------------------------------------------------------------
# Platform commission F (float, default 0.0)
# Has effect only if an equilibration method is chosen and affects supply.
# The vehicle utility per block is U = P.B.(1 - F) - C_d, 
# where F = platform commission. F > 0 amounts to the platform taking a 
# commission, F < 0 is the platform subsidizing vehicles.
# ------------------------------------------------------------------------

platform_commission = 0.0

# ------------------------------------------------------------------------
# Reserved wage (float, default 1)
# Has effect only if an equilibration method is chosen and affects supply.
# The vehicle utility per block is U = P.B - C_d, where C_d = reserved wage
# ------------------------------------------------------------------------

reserved_wage = 0.4

# ------------------------------------------------------------------------
# Demand elasticity (float, default 1.0)
# Has effect only if an equilibration method is chosen and affects supply.
# The demand (request rate) = k * p ^ (-r) 
# where r is the demand elasticity and k is the base demand
# ------------------------------------------------------------------------

demand_elasticity = 0.5

# ------------------------------------------------------------------------
# Equilibration interval (int)
# Has effect only if an equilibration method is chosen and affects demand.
# The number of blocks at which equilibration steps are chosen
# ------------------------------------------------------------------------

equilibration_interval = 5


[SEQUENCE]
# ------------------------------------------------------------------------
# Run a sequence of simulations
# ------------------------------------------------------------------------

# ------------------------------------------------------------------------
# Reques rate repeat (int)
# How many times to repeat each request_rate (to build up statistics)
# ------------------------------------------------------------------------

request_rate_repeat = 1

# ------------------------------------------------------------------------
# Driver count increment (int)
# Loop over vehicle counts, starting with vehicle_count (above), in 
# increments of vehicle_count_increment, with a max of vehicle_count_max
# ------------------------------------------------------------------------

vehicle_count_increment = 100

# ------------------------------------------------------------------------
# Driver count max (int)
# Loop over vehicle counts, starting with vehicle_count (above), in 
# increments of vehicle_count_increment, with a max of vehicle_count_max
# ------------------------------------------------------------------------

vehicle_count_max = 4000

# ------------------------------------------------------------------------
# Request rate increment (float) -- INACTIVE 
# Loop over request rates, starting with request_rate (above), in 
# increments of request_rate_increment, with a max of request_rate_max.
# Only one decimal place is relevant
# ------------------------------------------------------------------------

request_rate_increment = 10

# ------------------------------------------------------------------------
# Request rate max (float) -- INACTIVE 
# Loop over request rates, starting with request_rate (above), in 
# increments of request_rate_increment, with a max of request_rate_max.
# Only one decimal place is relevant
# ------------------------------------------------------------------------

request_rate_max = 200

# ========================================================================
# END
# ========================================================================

