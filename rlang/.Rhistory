librarian::shelf(tidyverse, ggplot2, reshape2, ggtext)
simulation <- read_csv(file=paste(filename_prefix, ".csv", sep=""))
# install.packages("librarian")
filename_prefix="../output/thirtytwo-2022-04-30-16-24"
librarian::shelf(tidyverse, ggplot2, reshape2, ggtext)
filename_root="../cities/toronto/jsonl/feb_6_2020-2022-05-29-15-25"
simulation <- read_csv(file=paste(filename_prefix, ".csv", sep=""))
# install.packages("librarian")
filename_prefix="../output/thirtytwo-2022-04-30-16-24"
librarian::shelf(tidyverse, ggplot2, reshape2, ggtext)
filename_root="../cities/toronto/jsonl/feb_6_2020-2022-05-29-15-25"
simulation <- read_csv(file=paste(filename_root, ".csv", sep=""))
longsim <- melt(simulation, measure.vars = c("VEHICLE_FRACTION_P1", "VEHICLE_FRACTION_P2", "VEHICLE_FRACTION_P3", "TRIP_MEAN_WAIT_FRACTION"))
colours <- c("VEHICLE_FRACTION_P1" = "blue4", "VEHICLE_FRACTION_P2" = "orange4", "VEHICLE_FRACTION_P3" = "green4", "TRIP_MEAN_WAIT_FRACTION" = "red4")
linetypes <-  c("VEHICLE_FRACTION_P1" = "solid", "VEHICLE_FRACTION_P2" = "solid", "VEHICLE_FRACTION_P3" = "solid", "TRIP_MEAN_WAIT_FRACTION" = "dashed")
labels <- c("VEHICLE_FRACTION_P1" = "P1", "VEHICLE_FRACTION_P2" = "P2", "VEHICLE_FRACTION_P3" = "P3", "TRIP_MEAN_WAIT_FRACTION" = "Wait fraction")
p <- ggplot(data=longsim, mapping=aes(x=block, y=value, colour=variable, linetype=variable))
p + geom_line(stat="smooth", alpha=0.5, size=1) +
scale_y_continuous(limits=c(0,1), minor_breaks = seq(0 , 1, .1), breaks = seq(0, 1, .2)) +
scale_linetype_manual(values=linetypes, labels=labels) +
scale_colour_manual(values=colours, labels=labels) +
xlab("Time (blocks)") +
ylab("Fraction") +
ggtitle("Simulation") +
theme(legend.position = c(0.8, 0.8), legend.title = element_blank())
# install.packages("librarian")
librarian::shelf(tidyverse, ggplot2, reshape2, ggtext, jsonlite, stringr)
sequence_plot <- function(filename_root, fit_cutoff){
jsonl_file <- paste(filename_root, ".jsonl", sep="")
lines <- readLines(jsonl_file)
config <- lapply(lines[1], fromJSON)
config <- lapply(config, unlist)
config <- bind_rows(config)
annotation = str_glue("City size={config$config.city_size} blocks<br>
Request rate={config$config.base_demand} per block<br>
Mean trip distance=20 minutes<br>
Trip inhomogeneity={config$config.trip_inhomogeneity}")
sequence <- read_csv(file=str_glue("{filename_root}.csv", sep=""))
sequence$idx <- 1:nrow(sequence)
# convert to a long form
longseq <- melt(sequence,
measure.vars = c("vehicle_fraction_idle",
"vehicle_fraction_picking_up",
"vehicle_fraction_with_rider",
"mean_trip_wait_fraction")
)
colours <- c("vehicle_fraction_idle" = "royalblue3", "vehicle_fraction_picking_up" = "gold3", "vehicle_fraction_with_rider" = "green4", "mean_trip_wait_fraction" = "red3")
linetypes <-  c("vehicle_fraction_idle" = "solid", "vehicle_fraction_picking_up" = "solid", "vehicle_fraction_with_rider" = "solid", "mean_trip_wait_fraction" = "dashed")
labels <- c("vehicle_fraction_idle" = "P1 (available)", "vehicle_fraction_picking_up" = "P2 (dispatch)", "vehicle_fraction_with_rider" = "P3 (busy)", "mean_trip_wait_fraction" = "Wait fraction (W/L)")
p <- ggplot(data=longseq, mapping=aes(x=mean_vehicle_count, y=value, colour=variable, linetype=variable, label=annotation))
p + geom_point(alpha=0.5, size=2) +
geom_line(stat="smooth",
data=subset(longseq, mean_vehicle_count > fit_cutoff),
alpha=0.5, size=1) +
scale_x_continuous(minor_breaks = seq(0, 10000, 500), breaks = seq(0, 10000, 1000)) +
scale_y_continuous(limits=c(0,1), minor_breaks = seq(0 , 1, .05), breaks = seq(0, 1, .2)) +
scale_linetype_manual(values=linetypes, labels=labels) +
scale_colour_manual(values=colours, labels=labels) +
xlab("Vehicles") +
ylab("Fraction") +
ggtitle(config$config.title) +
geom_richtext(aes(x=8000, y=1.0, label=annotation, width=unit(0.3, "npc"), stat="unique"),
size=3.2,
lineheight = .9,
color="black",
fill="white",
hjust = "left",
vjust= "top",
label.colour = "white",
show.legend = FALSE) +
# theme(axis.line = element_line(colour="darkgrey", size=1))
theme(legend.position = c(0.2, 0.85),
legend.background = element_rect(fill=alpha("lightgray", 0),
size=0.5, linetype="blank",
colour ="lightgray"),
legend.key=element_rect(fill = alpha("white", 0)),
legend.title = element_blank(),
legend.margin=margin(t=-0.25,l=0.05,b=0.0,r=0.05, unit='cm'),
legend.spacing.y = unit(0.5, "lines"))
}
filename_root="./toronto-feb-6-2020-sequence"
sequence_plot(filename_root = filename_root, fit_cutoff = 4500)
filename_root="./toronto-feb-6-2020-sequence"
sequence_plot(filename_root = filename_root, fit_cutoff = 4000)
sequence_plot <- function(filename_root, fit_cutoff){
jsonl_file <- paste(filename_root, ".jsonl", sep="")
lines <- readLines(jsonl_file)
config <- lapply(lines[1], fromJSON)
config <- lapply(config, unlist)
config <- bind_rows(config)
annotation = str_glue("City size={config$config.city_size} blocks<br>
Request rate={config$config.base_demand} per block<br>
Mean trip distance=20 minutes<br>
Trip inhomogeneity={config$config.trip_inhomogeneity}")
sequence <- read_csv(file=str_glue("{filename_root}.csv", sep=""))
sequence$idx <- 1:nrow(sequence)
# convert to a long form
longseq <- melt(sequence,
measure.vars = c("vehicle_fraction_idle",
"vehicle_fraction_picking_up",
"vehicle_fraction_with_rider",
"mean_trip_wait_fraction")
)
colours <- c("vehicle_fraction_idle" = "royalblue3", "vehicle_fraction_picking_up" = "gold3", "vehicle_fraction_with_rider" = "green4", "mean_trip_wait_fraction" = "red3")
linetypes <-  c("vehicle_fraction_idle" = "solid", "vehicle_fraction_picking_up" = "solid", "vehicle_fraction_with_rider" = "solid", "mean_trip_wait_fraction" = "dashed")
labels <- c("vehicle_fraction_idle" = "P1 (available)", "vehicle_fraction_picking_up" = "P2 (dispatch)", "vehicle_fraction_with_rider" = "P3 (busy)", "mean_trip_wait_fraction" = "Wait fraction (W/L)")
p <- ggplot(data=longseq, mapping=aes(x=mean_vehicle_count, y=value, colour=variable, linetype=variable, label=annotation))
p + geom_point(alpha=0.5, size=2) +
geom_line(stat="smooth",
data=subset(longseq, mean_vehicle_count > fit_cutoff),
alpha=0.5, size=1) +
scale_x_continuous(minor_breaks = seq(0, 10000, 500), breaks = seq(0, 10000, 1000)) +
scale_y_continuous(limits=c(0,1), minor_breaks = seq(0 , 1, .05), breaks = seq(0, 1, .2)) +
scale_linetype_manual(values=linetypes, labels=labels) +
scale_colour_manual(values=colours, labels=labels) +
xlab("Vehicles") +
ylab("Fraction") +
ggtitle(sprintf("Simulation of %s", config$config.title)) +
geom_richtext(aes(x=8000, y=1.0, label=annotation, width=unit(0.3, "npc"), stat="unique"),
size=3.2,
lineheight = .9,
color="black",
fill="white",
hjust = "left",
vjust= "top",
label.colour = "white",
show.legend = FALSE) +
# theme(axis.line = element_line(colour="darkgrey", size=1))
theme(legend.position = c(0.2, 0.85),
legend.background = element_rect(fill=alpha("lightgray", 0),
size=0.5, linetype="blank",
colour ="lightgray"),
legend.key=element_rect(fill = alpha("white", 0)),
legend.title = element_blank(),
legend.margin=margin(t=-0.25,l=0.05,b=0.0,r=0.05, unit='cm'),
legend.spacing.y = unit(0.5, "lines"))
}
filename_root="./toronto-feb-6-2020-sequence"
sequence_plot(filename_root = filename_root, fit_cutoff = 4000)
df <- data.frame(city_size=numeric(0), demand=numeric(0), inhomogeneity=character(0), variable=character(0), value=numeric(0))
df <- read_csv("demand.csv", col_types="nnccn")
# install.packages("librarian")
librarian::shelf(tidyverse, ggplot2, reshape2, ggtext, jsonlite, stringr)
sequence_plot <- function(filename_root, fit_cutoff){
jsonl_file <- paste(filename_root, ".jsonl", sep="")
lines <- readLines(jsonl_file)
config <- lapply(lines[1], fromJSON)
config <- lapply(config, unlist)
config <- bind_rows(config)
annotation = str_glue("City size={config$config.city_size} blocks<br>
Request rate={config$config.base_demand} per block<br>
Mean trip distance=20 minutes<br>
Trip inhomogeneity={config$config.trip_inhomogeneity}")
sequence <- read_csv(file=str_glue("{filename_root}.csv", sep=""))
sequence$idx <- 1:nrow(sequence)
# convert to a long form
longseq <- melt(sequence,
measure.vars = c("vehicle_fraction_idle",
"vehicle_fraction_picking_up",
"vehicle_fraction_with_rider",
"mean_trip_wait_fraction")
)
colours <- c("vehicle_fraction_idle" = "royalblue3", "vehicle_fraction_picking_up" = "gold3", "vehicle_fraction_with_rider" = "green4", "mean_trip_wait_fraction" = "red3")
linetypes <-  c("vehicle_fraction_idle" = "solid", "vehicle_fraction_picking_up" = "solid", "vehicle_fraction_with_rider" = "solid", "mean_trip_wait_fraction" = "dashed")
labels <- c("vehicle_fraction_idle" = "P1 (available)", "vehicle_fraction_picking_up" = "P2 (dispatch)", "vehicle_fraction_with_rider" = "P3 (busy)", "mean_trip_wait_fraction" = "Wait fraction (W/L)")
p <- ggplot(data=longseq, mapping=aes(x=mean_vehicle_count, y=value, colour=variable, linetype=variable, label=annotation))
p + geom_point(alpha=0.5, size=2) +
geom_line(stat="smooth",
data=subset(longseq, mean_vehicle_count > fit_cutoff),
alpha=0.5, size=1) +
scale_x_continuous(minor_breaks = seq(0, 10000, 500), breaks = seq(0, 10000, 1000)) +
scale_y_continuous(limits=c(0,1), minor_breaks = seq(0 , 1, .05), breaks = seq(0, 1, .2)) +
scale_linetype_manual(values=linetypes, labels=labels) +
scale_colour_manual(values=colours, labels=labels) +
xlab("Vehicles") +
ylab("Fraction") +
ggtitle(sprintf("Simulation of %s", config$config.title)) +
geom_richtext(aes(x=8000, y=1.0, label=annotation, width=unit(0.3, "npc"), stat="unique"),
size=3.2,
lineheight = .9,
color="black",
fill="white",
hjust = "left",
vjust= "top",
label.colour = "white",
show.legend = FALSE) +
# theme(axis.line = element_line(colour="darkgrey", size=1))
theme(legend.position = c(0.2, 0.85),
legend.background = element_rect(fill=alpha("lightgray", 0),
size=0.5, linetype="blank",
colour ="lightgray"),
legend.key=element_rect(fill = alpha("white", 0)),
legend.title = element_blank(),
legend.margin=margin(t=-0.25,l=0.05,b=0.0,r=0.05, unit='cm'),
legend.spacing.y = unit(0.5, "lines"))
}
filename_root="./toronto-feb-6-2020-sequence"
sequence_plot(filename_root = filename_root, fit_cutoff = 4000)
df <- data.frame(city_size=numeric(0), demand=numeric(0), inhomogeneity=character(0), variable=character(0), value=numeric(0))
df <- read_csv("demand.csv", col_types="nnccn")
tb <- as_tibble(df)
colours <- c("P3_max"="royalblue3", "N_min"="deeppink3" )
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p<- ggplot(data=tb %>% filter(variable %in% c("P3_max", "N_min")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
p +
geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.7, size=3) +
scale_colour_manual(values=colours, labels=labels) +
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
facet_wrap(~variable, scales = "free") +
theme(legend.position="none")
df <- data.frame(city_size=numeric(0), demand=numeric(0), inhomogeneity=character(0), variable=character(0), value=numeric(0))
df <- read_csv("demand.csv", col_types="nnccn")
tb <- as_tibble(df)
colours <- c("P3_max"="royalblue3", "N_min"="deeppink3" )
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p<- ggplot(data=tb %>% filter(variable %in% c("P3_max", "N_min")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
p +
geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.7, size=3) +
scale_colour_manual(values=colours, labels=labels) +
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
facet_wrap(~variable, scales = "free") +
xlim(0,20) +
theme(legend.position="none")
df <- data.frame(city_size=numeric(0), demand=numeric(0), inhomogeneity=character(0), variable=character(0), value=numeric(0))
df <- read_csv("demand.csv", col_types="nnccn")
tb <- as_tibble(df)
colours <- c("P3_max"="royalblue3", "N_min"="deeppink3" )
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p<- ggplot(data=tb %>% filter(variable %in% c("P3_max", "N_min")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
p +
geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.7, size=3) +
scale_colour_manual(values=colours, labels=labels) +
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
facet_wrap(~variable, scales = "free") +
xlim(0,50) +
theme(legend.position="none")
tb %>% filter(variable="N_min")
tb %>% filter(variable=="N_min")
tb %>% filter(variable=="N_min", inhomogeneity=="0.0")
x <- tb %>% filter(variable=="N_min", inhomogeneity=="0.0")
model <- lm(x$demand ~ poly(x$value,3))
model
summary(model)
plot(fitted(model),residuals(model))
model <- lm(x$value ~ poly(x$demand, 3)
)
)
model <- lm(x$value ~ poly(x$demand, 1))
summarise(model)
summary(model)
x$value
x$demand
x
model <- lm(value ~ poly(demand, 1), data=x)
summary(model)
x
model <- lm(value ~ demand, data=x)
summary(model)
data <- x
lm(data, formula=value ~ poly(demand, 1))
lm(data, formula=value ~ poly(demand, 0))
lm(data, formula=value ~ poly(demand, 2))
lm(data, formula=value ~ demand)
lm(data, formula=value ~ poly(demand,3))
lm(data, formula=value ~ demand + I(demand^2))
lm(data, formula=value ~ demand + I(demand^2) + I(demand^3))
model <- lm(tb, formula=value ~ demand + I(demand^2) + I(demand^3))
summary(model)
tb
model <- lm(tb %>% filter(variable=='N_min', inhomogeneity='0.0'), formula=value ~ demand + I(demand^2) + I(demand^3))
model <- lm(tb %>% filter(variable=='N_min', inhomogeneity=='0.0'), formula=value ~ demand + I(demand^2) + I(demand^3))
summary(model)
model <- lm(tb %>% filter(variable=='N_min', inhomogeneity=='0.0'), formula=value ~ demand + I(demand^2))
summary(model)
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "gam", formula = y ~ log(x), alpha=0.8) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours, labels=labels)
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
#facet_wrap(~variable, scales = "free")
df <- data.frame(city_size=numeric(0), demand=numeric(0), inhomogeneity=character(0), variable=character(0), value=numeric(0))
df <- read_csv("demand.csv", col_types="nnccn")
tb <- as_tibble(df)
colours <- c("P3_max"="royalblue3", "N_min"="deeppink3" )
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p<- ggplot(data=tb %>% filter(variable %in% c("P3_max", "N_min")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
p +
geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.7, size=3) +
scale_colour_manual(values=colours, labels=labels) +
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
facet_wrap(~variable, scales = "free") +
xlim(0,50) +
theme(legend.position="none")
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "gam", formula = y ~ log(x), alpha=0.8) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours, labels=labels)
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
#facet_wrap(~variable, scales = "free")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "gam", formula = y ~ log(x), alpha=0.8) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours)
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
colours <- c("M_w=0.30"="royalblue3")
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "gam", formula = y ~ log(x), alpha=0.8) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours)
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
#facet_wrap(~variable, scales = "free")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "gam", formula = y ~ log(x), alpha=0.8, se=F) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours)
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30, "M_w=0.25")),
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30", "M_w=0.25")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
colours <- c("M_w=0.30"="royalblue3")
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "gam", formula = y ~ log(x), alpha=0.8, se=F) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours)
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
#facet_wrap(~variable, scales = "free")
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30", "M_w=0.25")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
colours <- c("M_w=0.30"="royalblue3", "M_w=0.25"="darkgreen3")
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "gam", formula = y ~ log(x), alpha=0.8, se=F) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours)
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30", "M_w=0.25")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
colours <- c("M_w=0.30"="royalblue3", "M_w=0.25"="darkgreen")
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "gam", formula = y ~ log(x), alpha=0.8, se=F) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours)
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
#facet_wrap(~variable, scales = "free")
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30", "M_w=0.25")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
colours <- c("M_w=0.30"="royalblue3", "M_w=0.25"="darkgreen")
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
# geom_smooth(method = "gam", formula = y ~ log(x), alpha=0.8, se=F) +
geom_smooth(alpha=0.8, se=F) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours)
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
#facet_wrap(~variable, scales = "free")
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30", "M_w=0.25")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
colours <- c("M_w=0.30"="royalblue3", "M_w=0.25"="darkgreen")
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "gam", formula = y ~ log(x), alpha=0.8, se=F) +
# geom_smooth(alpha=0.8, se=F) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours)
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
#facet_wrap(~variable, scales = "free")
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30", "M_w=0.25")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
colours <- c("M_w=0.30"="royalblue3", "M_w=0.25"="darkgreen")
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "glm", formula = y ~ log(x), alpha=0.8, se=F) +
# geom_smooth(alpha=0.8, se=F) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours)
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
#facet_wrap(~variable, scales = "free")
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30", "M_w=0.25")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
colours <- c("M_w=0.30"="royalblue3", "M_w=0.25"="darkgreen")
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
# geom_smooth(method = "glm", formula = y ~ log(x), alpha=0.8, se=F) +
geom_smooth(method = "glm", formula = y~x, method.args = list(family = gaussian(link = 'log'))) +
# geom_smooth(alpha=0.8, se=F) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours)
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
#facet_wrap(~variable, scales = "free")
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30", "M_w=0.25")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
colours <- c("M_w=0.30"="royalblue3", "M_w=0.25"="darkgreen")
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "glm", formula = y ~ log(x), alpha=0.8, se=F) +
# geom_smooth(method = "glm", formula = y~x, method.args = list(family = gaussian(link = 'log'))) +
# geom_smooth(alpha=0.8, se=F) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform Commission") +
scale_colour_manual(values=colours)
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
#facet_wrap(~variable, scales = "free")
p<- ggplot(data=tb %>% filter(variable %in% c("M_w=0.30", "M_w=0.25")),
mapping=aes(x=demand, y=value, linetype=inhomogeneity, colour=variable))
colours <- c("M_w=0.30"="royalblue3", "M_w=0.25"="darkgreen")
labels <- c("0.0" = "0.0", "0.5" = "0.5")
p +
# geom_line(alpha=0.7, size=1) +
geom_point(alpha=0.8, size=3) +
geom_smooth(method = "glm", formula = y ~ log(x), alpha=0.8, se=F) +
# geom_smooth(method = "glm", formula = y~x, method.args = list(family = gaussian(link = 'log'))) +
# geom_smooth(alpha=0.8, se=F) +
ggtitle("Commission yielding a wait fraction of 0.3 (4.8mins)",
subtitle="At high demand, and in homogeneous environments,\nthe platform can take a higher commission and still deliver the same wait time") +
xlab("Demand (requests/block)") +
ylab("Platform commission") +
scale_colour_manual(values=colours)
# theme(legend.position = "none") +
# scale_color_brewer(palette= "Dark2") +
#facet_wrap(~variable, scales = "free")
